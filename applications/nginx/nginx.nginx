user nginx;

worker_processes auto;

events {
    # Max clients = 1024 * worker_processes
    worker_connections  1024;
    # Optimized for serving many clients for each thread, esspecially for Linux.
    use epoll;
    # Accept as many connections as possible, can flood worker connections if set too low.
    multi_accept on;
}

http {
 	access_log /dev/stdout;
	access_log /dev/stdout;
	#error_log /etc/nginx/logs/nginx-error.log;

    #upstream docker-jenkins {
    #    server jenkins:8080;
    #}

    # Needed headers for websockets and jenkins. -------------------------------------------------------------------------
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host            $host;
    #---------------------------------------------------------------------------------------------------------------------


    include           /etc/nginx/mime.types;
    default_type      application/octet-stream;

    # Don't buffer data sent, good for small data bursts in real time.
    tcp_nodelay       on;
    # Send headers in one piece (better than sending one by one).
    tcp_nopush        on;
    # Copies data between on FD to another within kernel, faster than read() + write().
    sendfile          on;

    #upstream service-jenkins {
    #    server 10.1.3.46:8080;
        #server jenkins:8080;
    #}

    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     15;
    send_timeout          10;
    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    server {
	    root /;

        listen 80 reuseport;
        #server_name quasarsource.com www.quasarsource.com;
        server_name localhost;

        #add_header 'Referrer-Policy' 'origin';

        location ^~ /jenkins/ {
            #proxy_pass         http://docker-jenkins;
            #proxy_pass http://jenkins:8080;
            #proxy_pass http://service-jenkins/;

            #set $upstream jenkins:8080;
            #proxy_pass $upstream;
            proxy_pass http://jenkins:8080/jenkins/;

            #####
            proxy_request_buffering off;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            #proxy_set_header        X-Forwarded-Proto http;
            add_header 'X-SSH-Endpoint' 'jenkins.domain.tld:50022' always;
            #####

            # Sendfile provides no advantages when operating as a proxy
            sendfile off;

            #proxy_redirect off;

            proxy_set_header Referer $http_referer;

            #set $upstream jenkins:8080;
            #proxy_pass $upstream;
            #
            proxy_set_header Host $host;
            #proxy_set_header        Host $host:$server_port;
            #proxy_set_header Host $http_host;
            #proxy_set_header X-Forwarded_proto http;
            #
            proxy_set_header X-Real-IP $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-For $remote_addr;

            #proxy_set_header X-Forwarded-Host $server_name;

            proxy_max_temp_file_size 0;

            proxy_connect_timeout      150;
            proxy_send_timeout         100;
            proxy_read_timeout         100;

            proxy_buffer_size          8k;
            proxy_buffers              4 32k;
            proxy_busy_buffers_size    64k;
            proxy_temp_file_write_size 64k;

            default_type application/octet-stream;

            keepalive_timeout 65;

            client_max_body_size 300m;
            client_body_buffer_size 128k;

            gzip  on;
            gzip_http_version 1.0;
            gzip_comp_level 6;
            gzip_min_length 0;
            gzip_buffers 16 8k;
            gzip_proxied any;
            gzip_types text/plain text/css text/xml text/javascript application/xml application/xml+rss application/javascript application/json;
            gzip_disable "MSIE [1-6]\.";
            gzip_vary on;
        }

        location ^~ /v/nl.min.js {
            expires -1;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        }

        location /v/ {
            #proxy_ignore_headers Set-Cookie;
            #proxy_hide_header Set-Cookie;

            expires 30d;
            #add_header Pragma public;
            add_header Cache-Control "public";

            sendfile_max_chunk 1m;
        }

        location /nginx_status {
            # Turn on nginx stats
            stub_status on;

            # I do not need logs for stats
            #access_log   off;

            # Security: Only allow access from 192.168.1.100 IP #
            #allow 192.168.1.100;

            # Send rest of the world to /dev/null #
            #deny all;
       }

        location / {
            add_header X-Cache-Status $upstream_cache_status;
            index nl.min.html;
            root /v/;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
